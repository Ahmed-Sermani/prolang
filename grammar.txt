prog           → declaration* EOF ;
declaration    → varDeclaration | statement ;
varDeclaration → "let" IDENTIFIER ( "=" expression )? ";" ;
statement      → exprStatement | printStatement | block | ifStatement;
ifStatement    → "if" "(" expression ")" statement ( "else" statement )? ;
block          → "{" declaration* "}" ;
exprStatement  → expression ";" ;
printStmt      → "print" expression ";" ;
expression     → assignment ;
assignment     → IDENTIFIER "=" assignment | logicalOr ;
logicalOr      → logicalAnd ( "or" logicalAnd )* ;
logicalAnd     → equality ( "and" equality )* ;
equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           → factor ( ( "-" | "+" ) factor )* ;
factor         → unary ( ( "/" | "*" ) unary )* ;
unary          → ( "!" | "-" ) unary | primary ;
primary        → NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")" | IDENTIFIER ;